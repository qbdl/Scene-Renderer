#version 430 core

layout(local_size_x=8,local_size_y=8,local_size_z=1) in;//一个线程组的线程信息

layout(rgba32f,binding=5) uniform image2D InputRT;
layout(rgba32f,binding=6) uniform image2D OutputRT;

uniform int Ns;//Ns = pow(2,m-1); m为第几阶段
uniform int N;

#define PI 3.14159274f

//横向FFT计算,只针对第m-1阶段
void FFTHorizontal(uvec3 SV_DispatchThreadID)
{
    uvec3 id=SV_DispatchThreadID;
    
    ivec2 idxs = ivec2(id.xy);
    idxs.x = int(floor(id.x / (Ns * 2.0f)) * Ns + id.x % Ns);
    float angle = 2.0f * PI * (id.x / (Ns * 2.0f));
    vec2 w = vec2(cos(angle), sin(angle));


    vec2 x0 =imageLoad(InputRT,ivec2(idxs)).xy;
    vec2 x1 =imageLoad(InputRT,ivec2(idxs.x + N * 0.5f, idxs.y)).xy;
    // vec2 x0 = InputRT[idxs].xy;
    // vec2 x1 = InputRT[ivec2(idxs.x + N * 0.5f, idxs.y)].xy;
    vec2 cur_output = x0 + vec2(w.x * x1.x - w.y * x1.y, w.x * x1.y + w.y * x1.x);
    imageStore(OutputRT,ivec2(id.xy),vec4(cur_output, 0, 0));
    // OutputRT[id.xy] = vec4(output, 0, 0);
}


void main()
{
    uvec3 SV_DispatchThreadID=gl_GlobalInvocationID;
    FFTHorizontal(SV_DispatchThreadID);
    
}